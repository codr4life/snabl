* add repl(env, in, out) fn
* add type args
** add type.args
** add type.specialize fn
** T0-TN
*** create on demand in home lib when referenced
* add rewrite fence after if: and switch: when needed
** add ops::Nop
* add support for func/fimp refs with &
** add func/fimp type
* add support for parsing ? as Maybe
** A? -> Maybe<A>
* add Sink<T>
** add push fn
* add [] indexing support
** parse as func '[]' and call with args

* add use: macro
* add lib: macro
** two args, id & body
** allow anonymous, _
*** push anonymous libs in current scope
*** add lib op which contains the actual lib
*** use for local defs
* add load func
** call when called with args
* add unsafe: macro
** one arg
** add Safe op
*** is_safe param
*** emit with true/false before after

* add sqlite plugin
* add wxwidgets plugin

func: fib<Int Int Int> Int (
  let: (n a b) _
  switch: @n z? @a one? @b, --; @b dup @a +; recall
)

func: fib<Int Int Int> Int (
  let: (n a b) _
  if: (z? @n) @a, if: (one? @n) @b, @n --; @b dup @a +; recall
)

func: fib<Int Int Int> Int (
	rswap dup
  if: z?
    (drop sdrop),
    dup if: one? ddrop, --; rswap dup rot +; recall
)


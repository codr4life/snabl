* only begin/end scopes if putvars in lambda like fimp
* add nil
** do nothing on call
* extract Parser
** pos & separators
* add repl(env, in, out) fn
* add test=/== funcs
** use in tests
* add recall op
** jump immediately
* add lib: macro
** two args, id & body
** allow anonymous, _
*** push anonymous libs in current scope
*** add lib op which contains the actual lib
*** use for local defs
* add swap macro
* add load func
** call when called with args
* add support for type args
** add type.args
** add type.specialize fn
** T0-TN
*** create on demand in home lib when referenced
* add Stack type
** use std::shared_ptr<Deque>
* add support for func/fimp refs with &
** add func/fimp type
* add support for parsing ? as Maybe
** A? -> Maybe<A>
* add [] indexing support
** parse as func '[]' and call with args

* add use: macro
* add Sink<T>
** add push fn
* add Push op type/val constructor
** use in add_macro/grep
* add sqlite plugin
* add proxygen plugin
* add wxwidgets plugin

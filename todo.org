* move main scope into Task
* move scope ptr into Task
* move stack into Task
* move _lib ptr into Task
* add task: macro
** run ops in separate task
** capture parent scope like fimp/lambda
* add bench: macro
** replaces fn
** use Times
** add Timer op
** add Type.clone(any)
*** clone pushed values in Push/Get ops
** add PushReg op
*** reg & type
*** push clone of value
** remove call now arg
* add stack bench
** push/pop range of ints
** wrap each int in nested stack/list
* eval fimps at compile time
** <3 times: Int>
** begin/end_scope
** use stack as args
* add for: loop
** Iter ... IterNext
** keep iter in Iter op
** step and jump to start in IterNext
* add support for str special chars
* add include: macro
** one arg
** load all files into ops
** add bench/all.sl
* add support for func/fimp refs with &
** add func/fimp type
* add Pair type
** use std::pair<Box, Box>
* add type: Foo Int macro
** derive new type from parent
** generate constructor 
* convert _stack to Starray<Box, MaxStack>
